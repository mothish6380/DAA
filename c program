#include <stdio.h>
#include <string.h>

void bitStuffing(char *data) {
    int n = strlen(data); // Length of the data string
    char stuffedData[2 * n]; // Array to store the stuffed data
    int j = 0; // Index for stuffed data

    // Counter to track the number of consecutive '1's
    int count = 0;

    // Traverse through each bit of the original data
    for (int i = 0; i < n; i++) {
        stuffedData[j++] = data[i]; // Copy the current bit

        // If the current bit is '1', increment the count
        if (data[i] == '1') {
            count++;
        } else {
            count = 0; // Reset count if a '0' is found
        }

        // If five consecutive '1's are found, insert a '0'
        if (count == 5) {
            stuffedData[j++] = '0';
            count = 0; // Reset the counter after stuffing
        }
    }

    stuffedData[j] = '\0'; // Null-terminate the stuffed data string
    printf("Stuffed Data: %s\n", stuffedData);
}

int main() {
    char data[100];
    
    // Accepting data from the user
    printf("Enter the binary data: ");
    scanf("%s", data);
    
    // Ensure the data only contains 0s and 1s
    for (int i = 0; i < strlen(data); i++) {
        if (data[i] != '0' && data[i] != '1') {
            printf("Invalid input. Please enter a binary string.\n");
            return -1;
        }
    }
    
    // Perform bit stuffing
    bitStuffing(data);

    return 0;
}
